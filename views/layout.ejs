<!DOCTYPE html>
<html ng-app="luria">
  <head>
    <title>Proyecto Luria Alpha</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/angular-material.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/styles.css">
    <!--STYLES END-->

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=RobotoDraft:300,400,500,700,400italic">
  </head>

  <body layout="column" ng-controller="NavController">

    <md-toolbar layout="row" >
      <div class="md-toolbar-tools">
        <md-button ng-click="toggleSidenav('left')" hide-gt-sm class="md-icon-button">
          <md-icon aria-label="Menu" md-svg-icon="https://s3-us-west-2.amazonaws.com/s.cdpn.io/68133/menu.svg"></md-icon>
        </md-button>
        <h1>Luria Alpha</h1>
        <span flex="10"></span>
        <span flex></span>
        <md-button ng-hide="auth.isAuthenticated()" class="md-raised" ng-click="showRegister($event)">Registrarse</md-button>
        <md-button ng-hide="auth.isAuthenticated()" class="md-raised" ng-click="showLogin($event)">Iniciar Sesion</md-button>
        <md-button ng-show="auth.isAuthenticated()" class="md-raised" ng-click="logout()">Cerrar Session</md-button>
      </div>
    </md-toolbar>
    <div layout="row" flex>
        <md-sidenav layout="column" class="md-sidenav-left md-whiteframe-z2" md-component-id="left" md-is-locked-open="$mdMedia('gt-sm')" ng-show="auth.isAuthenticated()">
          <md-tabs md-dynamic-height md-border-bottom>
            <md-tab label="Trastornos">
              <md-content class="md-padding" ng-controller="DisorderController">
                <md-input-container>
                  <label>Buscar Trastorno</label>
                  <input type="text" nd-model="disorder.search">
                </md-input-container>
                <md-input-container>
                  <md-button class="md-raised md-accent" ng-click="showNewDisorder($event)">Agregar Trastorno</md-button>
                </md-input-container>
                <md-list >
                  <md-list-item ng-repeat="disorder in disorders">
                    <a ng-href="#/show/{{disorder.id}}">
                      <md-item-content md-ink-ripple layout="row" layout-align="start center">
                        <div class="inset">
                            {{disorder.name}}
                        </div>
                      </md-item-content>
                    </a>
                    <md-divider ng-if="!$last"></md-divider>
                  </md-list-item>
                </md-list>
              </md-content>
            </md-tab>
            <md-tab label="Criterios">
              <md-content class="md-padding" ng-controller="CriteriaController">
                <md-input-container>
                  <label>Buscar Criterios</label>
                  <input type="text" nd-model="criteria.search">
                </md-input-container>
                <md-input-container>
                  <md-button class="md-raised md-accent" ng-click="showNewCriteria($event)">Agregar Criterio</md-button>
                </md-input-container>
                <md-list>
                  <md-list-item ng-repeat="criteria in criterion">
                    <a ng-href="">
                      <md-item-content md-ink-ripple layout="row" layout-align="start center">
                        <div class="inset">
                          {{criteria.text}}
                        </div>
                      </md-item-content>
                    </a>
                  </md-list-item>
                </md-list>
              </md-content>
            </md-tab>
          </md-tabs>
        </md-sidenav>
        <div layout="column" flex id="content">
            <md-content id="appContent" layout="column" flex class="md-padding">

		<%- body %>

            </md-content>
        </div>
    </div>




    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/angular.min.js"></script>
    <script src="/js/dependencies/angular-sails.min.js"></script>
    <script src="/js/dependencies/angular-animate.min.js"></script>
    <script src="/js/dependencies/angular-aria.min.js"></script>
    <script src="/js/dependencies/angular-material.min.js"></script>
    <script src="/js/dependencies/angular-messages.js"></script>
    <script src="/js/dependencies/angular-ui-router.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/controllers/criteriaController.js"></script>
    <script src="/js/controllers/disorderController.js"></script>
    <script src="/js/controllers/navController.js"></script>
    <script src="/js/controllers/showDisorderController.js"></script>
    <script src="/js/routes.js"></script>
    <script src="/js/services/accessLevels.js"></script>
    <script src="/js/services/auth.js"></script>
    <script src="/js/services/currentUser.js"></script>
    <script src="/js/services/localStorage.js"></script>
    <!--SCRIPTS END-->


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/templates.js"></script>
    <!--TEMPLATES END-->
  </body>
</html>
